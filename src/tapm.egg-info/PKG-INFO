Metadata-Version: 2.1
Name: tapm
Version: 0.1.dev35+gbea6858.d20240816
Summary: Testing artefacts in pharmaceutically-controlled multi-pathogen systems: a modelling study.
Author: Priesemann Group
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy
Requires-Dist: matplotlib
Requires-Dist: ipywidgets
Requires-Dist: scipy
Requires-Dist: pandas
Requires-Dist: path
Requires-Dist: requests
Requires-Dist: seaborn
Requires-Dist: scikit-learn
Requires-Dist: mplcursors
Requires-Dist: jax
Requires-Dist: diffrax
Requires-Dist: icomo
Requires-Dist: pytest
Provides-Extra: dev
Requires-Dist: numpy; extra == "dev"
Requires-Dist: matplotlib; extra == "dev"
Requires-Dist: ipywidgets; extra == "dev"
Requires-Dist: scipy; extra == "dev"
Requires-Dist: pandas; extra == "dev"
Requires-Dist: path; extra == "dev"
Requires-Dist: requests; extra == "dev"
Requires-Dist: seaborn; extra == "dev"
Requires-Dist: scikit-learn; extra == "dev"
Requires-Dist: mplcursors; extra == "dev"
Requires-Dist: jax; extra == "dev"
Requires-Dist: diffrax; extra == "dev"
Requires-Dist: icomo; extra == "dev"
Requires-Dist: pytest; extra == "dev"

# testing-artefacts-pharmaco-multipath

# About
Testing artefacts in pharmaceutically-controlled multi-pathogen systems: a modelling study. The project is mainly run by Priesemann Group at MPIDS, under the supervision of Viola Priesemann.
Main contributors: 

# File Structure

## Directories
- testing-artefacts-pharmaco-multipath: all the scripts are inside this directory. Note: adding new scripts? Don't forget to update the __init__.py
- results: 
- notebooks: all jupyter notebooks are here

# Installation

## From sources
The sources for icomo can be downloaded from
the [Github repo](https://github.com/Priesemann-Group/icomo.git)


Clone the public repository:

```bash
$ git clone https://github.com/Priesemann-Group/testing-artefacts-pharmaco-multipath.git
```
or (better, requires ssh key setup)
```bash
$ git clone git@github.com:Priesemann-Group/testing-artefacts-pharmaco-multipath.git
```

Enter the directory and install with pip:

```bash
$ cd testing-artefacts-pharmaco-multipath
$ pip install -e .
```
This enables you to edit the code and have the changes directly available in your python
environment.

You might also want to install [jupyterlab](https://jupyter.org) to run the notebooks:

```bash
$ pip install jupyterlab
```

# Development notes

## Add dependencies

Dependencies are listed in pyproject.toml. To add a new dependency, add it to the list in pyproject.toml 
and run
```bash
$ pip install -e .
```
to install the new dependencies in your environment.
